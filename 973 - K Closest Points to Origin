class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int K) {
        vector<vector<int>> t;
       priority_queue <pair<int,pair<int,int> >>   maxh;
        for(int i=0;i<points.size();i++)
        {
            maxh.push({points[i][0]*points[i][0]+points[i][1]*points[i][1],{points[i][0],points[i][1]}});
            if(maxh.size()>K)
                    maxh.pop();
        }
        while(maxh.size()>0)
        {
            vector<int> t1;
            pair<int,int>p =maxh.top().second;
            //cout<<p.first<<" "<<p.second;
            t1.push_back(p.first);
            t1.push_back(p.second);
            maxh.pop();
            t.push_back(t1);
        }
        return t;
    }
};
